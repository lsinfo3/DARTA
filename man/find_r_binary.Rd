% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_r_binary.R
\name{find_r_binary}
\alias{find_r_binary}
\title{Compute a fitting autocorrelation structure for the base process such that
it approximates the provided target process, by use of a binary search method.}
\usage{
find_r_binary(
  cdf,
  mean,
  var,
  rho,
  cdf_name_parameterized,
  epsilon,
  gamma,
  use_caching = T,
  print_progress = FALSE
)
}
\arguments{
\item{cdf}{Marginal CDF of target process.}

\item{mean}{Mean of marginal CDF of target process.}

\item{var}{Variance of marginal CDF of target process.}

\item{rho}{Target autocorrelation Structure of target process, provided as a
vector of numerics. Position on the vector describes the lag for which the
numeric autocorrelation value is supposed to occur.}

\item{cdf_name_parameterized}{Name of the target Distribution, together with
its parameters, separated by dashes. Used for naming the cache-file, which
stores a map of values from the base process autocorrelation space to the
target process autocorrelation space.}

\item{epsilon}{Controls acceptable error within which the target
autocorrelation is to be approximated by the base process. Defaults to
0.001.}

\item{gamma}{Threshold for computation of the expected value of the
product of two random variables of the target process.}

\item{print_progress}{Flag indicating whether updates on the generation
process should be printed. Used for debugging, or estimating computation
time.}
}
\value{
A vector containing a fitting autocorrelation structure for the base
process, or \code{NULL} if the process was not successful.
}
\description{
Compute a fitting autocorrelation structure for the base process such that
it approximates the provided target process, by use of a binary search method.
}
\details{
A map of base process autocorrelation values to target process
autocorrelation values is stored in the \code{.binary_caches} file in the
current working directory. Marginal distributions that assign significant
probability mass to a large amount of their value range tend to require
longer computations in order to find a fitting base autocorrelation
structure, and caching removes the need for this computation on repeated
generation attempts.
}
